object Problem002 {
  /*
Project Euler - Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
    */

  def fibonacci(n: Int): Int = n match {
    case 0 | 1 => 1
    case _     => fibonacci(n - 1) + fibonacci(n - 2)
  }                                               //> fibonacci: (n: Int)Int

  fibonacci(10)                                   //> res0: Int = 89

  def fibonacciListNotExceeding(n: Int): List[Int] = {

    def fibList(x: Int, xs: List[Int]): List[Int] = {
      if (xs.head > n) xs.tail
      else fibList(x + 1, fibonacci(x) :: xs)
    }

    fibList(1, List(0))
  }                                               //> fibonacciListNotExceeding: (n: Int)List[Int]

  fibonacciListNotExceeding(4000000)              //> res1: List[Int] = List(3524578, 2178309, 1346269, 832040, 514229, 317811, 19
                                                  //| 6418, 121393, 75025, 46368, 28657, 17711, 10946, 6765, 4181, 2584, 1597, 987
                                                  //| , 610, 377, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 0)
  fibonacciListNotExceeding(4000000).filter(_ % 2 == 0)
                                                  //> res2: List[Int] = List(3524578, 832040, 196418, 46368, 10946, 2584, 610, 144
                                                  //| , 34, 8, 2, 0)

  // FINAL SOLUTION
  fibonacciListNotExceeding(4000000).filter(_ % 2 == 0).reduceLeft(_ + _)
                                                  //> res3: Int = 4613732

	// fibonacci stream
  def fibStream(a: Int, b: Int): Stream[Int] = {
    Stream.cons(a, fibStream(b, a + b))
  }                                               //> fibStream: (a: Int, b: Int)Stream[Int]
  
  fibStream(0,1).take(10).toList                  //> res4: List[Int] = List(0, 1, 1, 2, 3, 5, 8, 13, 21, 34)
}